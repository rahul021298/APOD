const express = require("express");
const router = express.Router();
const apodController = require(".././controller/apodController");

router.get("/", async (req, res, err) => {
  try {
    let maxDay = new Date().getUTCDate();
    let maxYear = new Date().getUTCFullYear();
    let maxMonth = new Date().getUTCMonth();
    const maxDate = `${maxYear}-${maxMonth + 1}-${maxDay}`;
    const minDate = "1995-06-16";
    const dateTocheck = req.query.date ? req.query.date : maxDate;
    if (!apodController.validateDate(dateTocheck)) {
      throw {description: "Invalid Input Error", message: "Invalid Date Format",}
    }
    if (dateTocheck > maxDate || dateTocheck < minDate) {
      throw {
        description: "Invalid Input Error",
        message: `Date must be between ${minDate} and ${maxDate}.`,
      };
    }
    const response = await apodController.getData(dateTocheck);
    if (response.data) {
      console.info("FROM API: " + response.data);
      if (response.data.media_type === "image") {
        await apodController.downloadImage(
          response.data.url,
          `./images/${dateTocheck}.jpg`
        );
        response.data.url = `../images/${dateTocheck}.jpg`;
      }
      apodController.insertData(response.data);
      res.send(response.data);
    } else {
      res.send(response);
    }
  } catch (err) {
    res.status(400);
    res.send({
      description: err.description,
      message: err.message,
      stack: err.stack,
    });
  }
});

module.exports = router;
